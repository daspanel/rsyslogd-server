{
    "docs": [
        {
            "location": "/", 
            "text": "Rsyslogd Server\n\n\nRsyslog server running inside docker container.\n\n\n\n\nFree software: MIT license\n\n\nDocumentation: https://github.com/daspanel/rsyslogd-server\n\n\n\n\nEnvironment variables\n\n\n\n\n\n\n\n\nVariable\n\n\nOptional\n\n\nExample Value\n\n\nPurpose\n\n\n\n\n\n\n\n\n\n\nDASPANEL_GUUID\n\n\nyes\n\n\nksdf09832klsdfkjsdlk\n\n\nUUID used in Daspanel system to identify a unique instance of data. If you don't provide one Daspanel generate it using \nGetuuid API\n\n\n\n\n\n\nDASPANEL_MASTER_PASSWORD\n\n\nyes\n\n\nSomeGood#%@Passwd123\n\n\nPassword to be used in the various Daspanel services. Automatically generated if you do not provide one.\n\n\n\n\n\n\nDASPANEL_MASTER_EMAIL\n\n\nno\n\n\nyour@email.com\n\n\nEmail of the owner of Daspanel instance. It can be used for receiving notifications from the system. The Docker container will not run if it is not informed.\n\n\n\n\n\n\n\n\nYou can find the value of variables automatically generated by examining the \ncontainer log after it starts. Or looking at the output of the console where \nyou run your docker.\n\n\nHow to use\n\n\nGet\n\n\ndocker pull daspanel/rsyslogd-server:latest\n\n\n\n\nRun\n\n\ndocker run -e DASPANEL_MASTER_EMAIL=my@email.com daspanel/rsyslogd-server:latest\n\n\n\n\nRun with interactive shell \n\n\ndocker run -it -e DASPANEL_MASTER_EMAIL=my@email.com daspanel/rsyslogd-server:latest /bin/sh\n\n\n\n\nFeatures\n\n\n\n\nAlpine Linux with S6 overlay supervisor system\n\n\nRsyslogd server\n\n\n\n\n\n\nWIP\n\n\nNothing to see here, move along.\n\n\n\n\nCredits\n\n\n\n\nThis package was created with \nhttps://github.com/daspanel/cookiecutter-docker\n\n\nCookiecutter\n\n\nMkdocs\n\n\nCHANGELOG.md Generator\n\n\nhttps://github.com/deweysasser/docker-project-template\n\n\nhttps://github.com/zixia/docker-simple-mail-forwarder\n\n\nhttps://github.com/sstephenson/bats\n\n\nhttps://github.com/mvanholsteijn/docker-makefile", 
            "title": "Home"
        }, 
        {
            "location": "/#rsyslogd-server", 
            "text": "Rsyslog server running inside docker container.   Free software: MIT license  Documentation: https://github.com/daspanel/rsyslogd-server", 
            "title": "Rsyslogd Server"
        }, 
        {
            "location": "/#environment-variables", 
            "text": "Variable  Optional  Example Value  Purpose      DASPANEL_GUUID  yes  ksdf09832klsdfkjsdlk  UUID used in Daspanel system to identify a unique instance of data. If you don't provide one Daspanel generate it using  Getuuid API    DASPANEL_MASTER_PASSWORD  yes  SomeGood#%@Passwd123  Password to be used in the various Daspanel services. Automatically generated if you do not provide one.    DASPANEL_MASTER_EMAIL  no  your@email.com  Email of the owner of Daspanel instance. It can be used for receiving notifications from the system. The Docker container will not run if it is not informed.     You can find the value of variables automatically generated by examining the \ncontainer log after it starts. Or looking at the output of the console where \nyou run your docker.", 
            "title": "Environment variables"
        }, 
        {
            "location": "/#how-to-use", 
            "text": "Get  docker pull daspanel/rsyslogd-server:latest  Run  docker run -e DASPANEL_MASTER_EMAIL=my@email.com daspanel/rsyslogd-server:latest  Run with interactive shell   docker run -it -e DASPANEL_MASTER_EMAIL=my@email.com daspanel/rsyslogd-server:latest /bin/sh", 
            "title": "How to use"
        }, 
        {
            "location": "/#features", 
            "text": "Alpine Linux with S6 overlay supervisor system  Rsyslogd server    WIP  Nothing to see here, move along.", 
            "title": "Features"
        }, 
        {
            "location": "/#credits", 
            "text": "This package was created with  https://github.com/daspanel/cookiecutter-docker  Cookiecutter  Mkdocs  CHANGELOG.md Generator  https://github.com/deweysasser/docker-project-template  https://github.com/zixia/docker-simple-mail-forwarder  https://github.com/sstephenson/bats  https://github.com/mvanholsteijn/docker-makefile", 
            "title": "Credits"
        }, 
        {
            "location": "/help/", 
            "text": "Usage\n\n\nGet\n\n\n$ docker pull daspanel/rsyslogd-server:latest\n\n\n\n\nRun\n\n\n$ docker run --name=my-rsyslogd-server daspanel/rsyslogd-server:latest\n\n\n\n\nStop\n\n\n$ docker stop my-rsyslogd-server\n\n\n\n\nUpdate image\n\n\n$ docker stop my-rsyslogd-server\n$ docker pull daspanel/rsyslogd-server:latest\n$ docker run --name=my-rsyslogd-server daspanel/rsyslogd-server:latest\n\n\n\n\nTips", 
            "title": "Basic"
        }, 
        {
            "location": "/help/#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/help/#get", 
            "text": "$ docker pull daspanel/rsyslogd-server:latest", 
            "title": "Get"
        }, 
        {
            "location": "/help/#run", 
            "text": "$ docker run --name=my-rsyslogd-server daspanel/rsyslogd-server:latest", 
            "title": "Run"
        }, 
        {
            "location": "/help/#stop", 
            "text": "$ docker stop my-rsyslogd-server", 
            "title": "Stop"
        }, 
        {
            "location": "/help/#update-image", 
            "text": "$ docker stop my-rsyslogd-server\n$ docker pull daspanel/rsyslogd-server:latest\n$ docker run --name=my-rsyslogd-server daspanel/rsyslogd-server:latest", 
            "title": "Update image"
        }, 
        {
            "location": "/help/#tips", 
            "text": "", 
            "title": "Tips"
        }, 
        {
            "location": "/help/compose/", 
            "text": "Using docker-compose\n\n\nOverview\n\n\nYou can use the \ndocker-compose.yml\n associated with this image to have more \nadvanced control on his usage. See the contents of the docker-compose.yml file \nto familiarize yourself with its features.\n\n\nThe \ndocker-compose\n command is an powerfull member of the Docker system and \nis highly recommended that you know his documentation: \n\nhttps://docs.docker.com/compose/\n\n\nQuick Start\n\n\nCreate a Docker volume to store permanent data\n\n\ndocker volume create --name=daspanel-data\n\n\n\n\nStart container:\n\n\ndocker-compose up\n\n\n\n\nThis will start an new docker container using \n\nrsyslogd-server\n as base image. \n\n?\n\n\nStop container:\n\n\ndocker-compose stop\n\n\n\n\nStop the running conatiner create before with the \ndocker-compose up\n command. \n\n?\n\n\nRemove stoped containers:\n\n\ndocker-compose rm\n\n\n\n\nUse this command to remove stopped containers create before with the \n\ndocker-compose up\n command. \n\n?\n  \n\n\nAnother usages\n\n\nShell access to the container\n\n\nIn order to run the container and get access to a shell on it you can do:\n\n\ndocker-compose run daspanel-rsyslogd-server /bin/sh\n\n\n\n\nwhere \ndaspanel-rsyslogd-server\n must be one of the \ndefinied services in your \ndocker-compose.yml\n. See below relevant content of \nthe compose file:\n\n\nversion: '2'\nservices:\n    daspanel-rsyslogd-server:\n        build:\n            context: .\n            dockerfile: Dockerfile\n        ...\n\n\n\n\nCustomization\n\n\nThe sample \ndocker-compose.yml\n file in this project it's only an start point for \nyour convenience. Fell free to change it for your specific needs.\n\n\nThe sample \ndocker-compose.yml\n set env variables using the \ndaspanel.env\n file.", 
            "title": "Usingh docker-compose"
        }, 
        {
            "location": "/help/compose/#using-docker-compose", 
            "text": "", 
            "title": "Using docker-compose"
        }, 
        {
            "location": "/help/compose/#overview", 
            "text": "You can use the  docker-compose.yml  associated with this image to have more \nadvanced control on his usage. See the contents of the docker-compose.yml file \nto familiarize yourself with its features.  The  docker-compose  command is an powerfull member of the Docker system and \nis highly recommended that you know his documentation:  https://docs.docker.com/compose/", 
            "title": "Overview"
        }, 
        {
            "location": "/help/compose/#quick-start", 
            "text": "", 
            "title": "Quick Start"
        }, 
        {
            "location": "/help/compose/#create-a-docker-volume-to-store-permanent-data", 
            "text": "docker volume create --name=daspanel-data", 
            "title": "Create a Docker volume to store permanent data"
        }, 
        {
            "location": "/help/compose/#start-container", 
            "text": "docker-compose up  This will start an new docker container using  rsyslogd-server  as base image.  ?", 
            "title": "Start container:"
        }, 
        {
            "location": "/help/compose/#stop-container", 
            "text": "docker-compose stop  Stop the running conatiner create before with the  docker-compose up  command.  ?", 
            "title": "Stop container:"
        }, 
        {
            "location": "/help/compose/#remove-stoped-containers", 
            "text": "docker-compose rm  Use this command to remove stopped containers create before with the  docker-compose up  command.  ?", 
            "title": "Remove stoped containers:"
        }, 
        {
            "location": "/help/compose/#another-usages", 
            "text": "", 
            "title": "Another usages"
        }, 
        {
            "location": "/help/compose/#shell-access-to-the-container", 
            "text": "In order to run the container and get access to a shell on it you can do:  docker-compose run daspanel-rsyslogd-server /bin/sh  where  daspanel-rsyslogd-server  must be one of the \ndefinied services in your  docker-compose.yml . See below relevant content of \nthe compose file:  version: '2'\nservices:\n    daspanel-rsyslogd-server:\n        build:\n            context: .\n            dockerfile: Dockerfile\n        ...", 
            "title": "Shell access to the container"
        }, 
        {
            "location": "/help/compose/#customization", 
            "text": "The sample  docker-compose.yml  file in this project it's only an start point for \nyour convenience. Fell free to change it for your specific needs.  The sample  docker-compose.yml  set env variables using the  daspanel.env  file.", 
            "title": "Customization"
        }, 
        {
            "location": "/help/advanced/", 
            "text": "Advanced\n\n\nNone yet. Why not be the first to contribute to it ? See \n\nContributing\n page for details.", 
            "title": "Advanced"
        }, 
        {
            "location": "/help/advanced/#advanced", 
            "text": "None yet. Why not be the first to contribute to it ? See  Contributing  page for details.", 
            "title": "Advanced"
        }, 
        {
            "location": "/help/development/", 
            "text": "Development\n\n\nHow to use this repositorie for local development.\n\n\nQuick Start\n\n\n    git clone https://github.com/daspanel/rsyslogd-server\n    git remote rm origin\n    # hack on source/Dockerfile\n    make clean clean-image clean-image-dangling build\n\n\n\n\nOverview\n\n\nIf you want to use some app with this docker project, starting putting the interesting\ncode under \nsrc/\n dir.  The project and corresponding build pipeline\nwill \"just work\".\n\n\nBuilding pipeline\n\n\nYou can create a 'docker-compose.override.template' that adapts it\nproperly to your development environment.  The Makefile when then\ngenerate a 'docker-compose.override.yml' file from the template.\n\n\nIf you want to adapt it to your demo and/or production environemnts,\ncreate a file something like docker-compose.\n.yml and use 'make\nbuild-\n run-\n'\n\n\nTesting\n\n\nYou can test in several ways\n\n\n\n\n\n\nRun a container using this image and getting an interactive shell:\n    \n\n\ndocker-compose run rsyslogd-server /bin/sh\n\n\n\nAll content inside the \nsrc\n dir will be avaiable on the \n/app\n dir of the \ncontainer and you can work\n\n\n\n\n\n\nExecute scripts inside a running container:\n\n\n\n\nPut some script that do tests when the container run unde \nsrc/\n\n\nExcute the script:\n    \ndocker-compose exec rsyslogd-server /app/yourscript\n\n\n\n\n\n\n\nThis only work when your docker image is not stopped, i.e., when the image \nhave a long running processes like a MySql server. See \n\ndocker-compose docs\n and the \n\nexec command\n for more info.\n\n\n\n\n\n\nCustomization\n\n\nModify 'docker-compose.yml' to launch your project correctly. \n\n\nAdd make rules, recipes and dependencies to 'recipes.mk' to add extra\nbuild steps or dependencies.  Modify Makefile as a last resort (and\nlet me know what you had to modify so I can look into supporting that\ncustomization).\n\n\nUse environment specific overrides to run in different environments.", 
            "title": "Development"
        }, 
        {
            "location": "/help/development/#development", 
            "text": "How to use this repositorie for local development.", 
            "title": "Development"
        }, 
        {
            "location": "/help/development/#quick-start", 
            "text": "git clone https://github.com/daspanel/rsyslogd-server\n    git remote rm origin\n    # hack on source/Dockerfile\n    make clean clean-image clean-image-dangling build", 
            "title": "Quick Start"
        }, 
        {
            "location": "/help/development/#overview", 
            "text": "If you want to use some app with this docker project, starting putting the interesting\ncode under  src/  dir.  The project and corresponding build pipeline\nwill \"just work\".", 
            "title": "Overview"
        }, 
        {
            "location": "/help/development/#building-pipeline", 
            "text": "You can create a 'docker-compose.override.template' that adapts it\nproperly to your development environment.  The Makefile when then\ngenerate a 'docker-compose.override.yml' file from the template.  If you want to adapt it to your demo and/or production environemnts,\ncreate a file something like docker-compose. .yml and use 'make\nbuild-  run- '", 
            "title": "Building pipeline"
        }, 
        {
            "location": "/help/development/#testing", 
            "text": "You can test in several ways    Run a container using this image and getting an interactive shell:\n      docker-compose run rsyslogd-server /bin/sh  All content inside the  src  dir will be avaiable on the  /app  dir of the \ncontainer and you can work    Execute scripts inside a running container:   Put some script that do tests when the container run unde  src/  Excute the script:\n     docker-compose exec rsyslogd-server /app/yourscript    This only work when your docker image is not stopped, i.e., when the image \nhave a long running processes like a MySql server. See  docker-compose docs  and the  exec command  for more info.", 
            "title": "Testing"
        }, 
        {
            "location": "/help/development/#customization", 
            "text": "Modify 'docker-compose.yml' to launch your project correctly.   Add make rules, recipes and dependencies to 'recipes.mk' to add extra\nbuild steps or dependencies.  Modify Makefile as a last resort (and\nlet me know what you had to modify so I can look into supporting that\ncustomization).  Use environment specific overrides to run in different environments.", 
            "title": "Customization"
        }, 
        {
            "location": "/howto/", 
            "text": "Advanced\n\n\nNone yet. Why not be the first to contribute to it ? See \n\nContributing\n page for details.", 
            "title": "How To"
        }, 
        {
            "location": "/howto/#advanced", 
            "text": "None yet. Why not be the first to contribute to it ? See  Contributing  page for details.", 
            "title": "Advanced"
        }, 
        {
            "location": "/issues/", 
            "text": "How to report Bugs and/or issues\n\n\nIf you find a bug or another type of issue let us know about it.\n\n\nOpen a new issue at \n\nhttps://github.com/daspanel/rsyslogd-server/issues\n\n\nIf you are reporting a bug, please include:\n\n\n\n\nYour operating system name and version.\n\n\nAny details about your local setup that might be helpful in troubleshooting.\n\n\nDetailed steps to reproduce the bug.", 
            "title": "Issues"
        }, 
        {
            "location": "/issues/#how-to-report-bugs-andor-issues", 
            "text": "If you find a bug or another type of issue let us know about it.  Open a new issue at  https://github.com/daspanel/rsyslogd-server/issues  If you are reporting a bug, please include:   Your operating system name and version.  Any details about your local setup that might be helpful in troubleshooting.  Detailed steps to reproduce the bug.", 
            "title": "How to report Bugs and/or issues"
        }, 
        {
            "location": "/contributing/", 
            "text": "Contributions are welcome\n\n\nAnd they are greatly appreciated! Every\nlittle bit helps, and credit will always be given.\n\n\nTypes of Contributions\n\n\nReport Bugs\n\n\nReport bugs at \n\nhttps://github.com/daspanel/rsyslogd-server/issues\n\n\nIf you are reporting a bug, please include:\n\n\n\n\nYour operating system name and version.\n\n\nAny details about your local setup that might be helpful in troubleshooting.\n\n\nDetailed steps to reproduce the bug.\n\n\n\n\nFix Bugs\n\n\nLook through the GitHub issues for bugs. Anything tagged with \"bug\"\nand \"help wanted\" is open to whoever wants to implement it.\n\n\nImplement Features\n\n\nLook through the GitHub issues for features. Anything tagged with \"enhancement\"\nand \"help wanted\" is open to whoever wants to implement it.\n\n\nWrite Documentation\n\n\nrsyslogd-server\n could always use more documentation, whether as part of the\nofficial \nrsyslogd-server\n docs, in docstrings, or even on the web in blog posts,\narticles, and such.\n\n\nSubmit Feedback\n\n\nThe best way to send feedback is to file an issue at \n\nhttps://github.com/daspanel/rsyslogd-server/issues\n\n\nIf you are proposing a feature:\n\n\n\n\nExplain in detail how it would work.\n\n\nKeep the scope as narrow as possible, to make it easier to implement.\n\n\nRemember that this is a volunteer-driven project, and that contributions\n  are welcome :)\n\n\n\n\nGet Started!\n\n\nReady to contribute? Here's how to set up \nrsyslogd-server\n for local development.\n\n\n\n\nFork the \nrsyslogd-server\n repo on GitHub.\n\n\n\n\nClone your fork locally:\n\n\n\n\n\n    $ git clone git@github.com:your_name_here/rsyslogd-server.git\n\n\n\n\n\n\n\nCreate a branch for local development:\n\n\n\n\n\n    $ git checkout -b name-of-your-bugfix-or-feature\n\n\n\nNow you can make your changes locally.\n\n\n\n\n\n\nCommit your changes and push your branch to GitHub:\n\n\n\n\n\n    $ git add .\n    $ git commit -m \"Your detailed description of your changes.\"\n    $ git push origin name-of-your-bugfix-or-feature\n\n\n\n\n\n\n\nSubmit a pull request through the GitHub website.\n\n\n\n\n\n\nPull Request Guidelines\n\n\nBefore you submit a pull request, check that it meets these guidelines:\n\n\n\n\nThe pull request should include tests.\n\n\nIf the pull request adds functionality, the docs should be updated. Put\n   your new functionality into a function with a docstring, and add the\n   feature to the list in README.rst.\n\n\nThe pull request should work for latest Docker Engine/Docker Compose oficial versions.\n\n\n\n\nTips", 
            "title": "Contributing"
        }, 
        {
            "location": "/contributing/#contributions-are-welcome", 
            "text": "And they are greatly appreciated! Every\nlittle bit helps, and credit will always be given.", 
            "title": "Contributions are welcome"
        }, 
        {
            "location": "/contributing/#types-of-contributions", 
            "text": "Report Bugs  Report bugs at  https://github.com/daspanel/rsyslogd-server/issues  If you are reporting a bug, please include:   Your operating system name and version.  Any details about your local setup that might be helpful in troubleshooting.  Detailed steps to reproduce the bug.   Fix Bugs  Look through the GitHub issues for bugs. Anything tagged with \"bug\"\nand \"help wanted\" is open to whoever wants to implement it.  Implement Features  Look through the GitHub issues for features. Anything tagged with \"enhancement\"\nand \"help wanted\" is open to whoever wants to implement it.  Write Documentation  rsyslogd-server  could always use more documentation, whether as part of the\nofficial  rsyslogd-server  docs, in docstrings, or even on the web in blog posts,\narticles, and such.  Submit Feedback  The best way to send feedback is to file an issue at  https://github.com/daspanel/rsyslogd-server/issues  If you are proposing a feature:   Explain in detail how it would work.  Keep the scope as narrow as possible, to make it easier to implement.  Remember that this is a volunteer-driven project, and that contributions\n  are welcome :)", 
            "title": "Types of Contributions"
        }, 
        {
            "location": "/contributing/#get-started", 
            "text": "Ready to contribute? Here's how to set up  rsyslogd-server  for local development.   Fork the  rsyslogd-server  repo on GitHub.   Clone your fork locally:       $ git clone git@github.com:your_name_here/rsyslogd-server.git    Create a branch for local development:       $ git checkout -b name-of-your-bugfix-or-feature  Now you can make your changes locally.    Commit your changes and push your branch to GitHub:       $ git add .\n    $ git commit -m \"Your detailed description of your changes.\"\n    $ git push origin name-of-your-bugfix-or-feature    Submit a pull request through the GitHub website.", 
            "title": "Get Started!"
        }, 
        {
            "location": "/contributing/#pull-request-guidelines", 
            "text": "Before you submit a pull request, check that it meets these guidelines:   The pull request should include tests.  If the pull request adds functionality, the docs should be updated. Put\n   your new functionality into a function with a docstring, and add the\n   feature to the list in README.rst.  The pull request should work for latest Docker Engine/Docker Compose oficial versions.", 
            "title": "Pull Request Guidelines"
        }, 
        {
            "location": "/contributing/#tips", 
            "text": "", 
            "title": "Tips"
        }, 
        {
            "location": "/authors/", 
            "text": "Credits\n\n\nThis project was created by \nAbner G Jacobsen\n.\n\n\nDevelopment Lead\n\n\n\n\nAbner G Jacobsen \n\n\n\n\nContributors\n\n\nNone yet. Why not be the first?", 
            "title": "Authors"
        }, 
        {
            "location": "/authors/#credits", 
            "text": "This project was created by  Abner G Jacobsen .", 
            "title": "Credits"
        }, 
        {
            "location": "/authors/#development-lead", 
            "text": "Abner G Jacobsen", 
            "title": "Development Lead"
        }, 
        {
            "location": "/authors/#contributors", 
            "text": "None yet. Why not be the first?", 
            "title": "Contributors"
        }, 
        {
            "location": "/changelog/", 
            "text": "Changelog - admindaspanel / rsyslogd-server\n\n\nrsyslogd-server-0.1.2\n\n\nChanges\n\n\n\n\nSee changes in CHANGELOG.md\n\n\nbumped to version 0.1.2\n\n\nSee changes in CHANGELOG.md\n\n\nbumped to version 0.1.1\n\n\nInitial setup\n\n\nfirst commit\n\n\n\n\nContributors\n\n\n\n\nAbner G Jacobsen\n\n\n\n\nReleased by Abner G Jacobsen, Thu 01 Sep 2016 -\n\nsee the diff\n\n\n\n\n0.1.3\n\n\nChanges\n\n\n\n\nbumped to version 0.1.3\n\n\nChanged Dockerfile.\n\n\nChanged docs.\n\n\nChanged initiliazition way.\n\n\nAdded docker-compose files\n\n\nSee changes in CHANGELOG.md\n\n\nbumped to version 0.1.2\n\n\nSee changes in CHANGELOG.md\n\n\nbumped to version 0.1.1\n\n\nInitial setup\n\n\nfirst commit\n\n\n\n\nContributors\n\n\n\n\nAbner G Jacobsen\n\n\n\n\nReleased by Abner G Jacobsen, Tue 06 Sep 2016 -\n\nsee the diff", 
            "title": "Changelog"
        }, 
        {
            "location": "/changelog/#changelog-admindaspanel-rsyslogd-server", 
            "text": "", 
            "title": "Changelog - admindaspanel / rsyslogd-server"
        }, 
        {
            "location": "/changelog/#rsyslogd-server-012", 
            "text": "Changes   See changes in CHANGELOG.md  bumped to version 0.1.2  See changes in CHANGELOG.md  bumped to version 0.1.1  Initial setup  first commit   Contributors   Abner G Jacobsen   Released by Abner G Jacobsen, Thu 01 Sep 2016 - see the diff", 
            "title": "rsyslogd-server-0.1.2"
        }, 
        {
            "location": "/changelog/#013", 
            "text": "Changes   bumped to version 0.1.3  Changed Dockerfile.  Changed docs.  Changed initiliazition way.  Added docker-compose files  See changes in CHANGELOG.md  bumped to version 0.1.2  See changes in CHANGELOG.md  bumped to version 0.1.1  Initial setup  first commit   Contributors   Abner G Jacobsen   Released by Abner G Jacobsen, Tue 06 Sep 2016 - see the diff", 
            "title": "0.1.3"
        }
    ]
}